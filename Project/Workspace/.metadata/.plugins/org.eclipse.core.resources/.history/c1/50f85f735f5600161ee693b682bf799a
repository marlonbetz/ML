import numpy as np 
from pandas import DataFrame
import pickle
import codecs 
import regex
df = pickle.load(open("performances.pkl","rb"))

def getListofASJPPhonemes(word):
    phonemes_alone="pbmfv84tdszcnSZCjT5kgxNqGX7hlLwyr!ieaouE3"
    phonemeSearchRegex = "["+phonemes_alone+"][\"\*]?(?!["+phonemes_alone+"]~|["+phonemes_alone+"]{2}\$)|["+phonemes_alone+"]{2}?~|["+phonemes_alone+"]{3}?\$"
    return regex.findall(phonemeSearchRegex, word)



"""
READ CORPUS FROM ASJP DUMP
"""
print("READ CORPUS FROM ASJP DUMP")
pathToASJPCorpusFile = "data/dataset.tab"
allWords = []
for i,line in enumerate(codecs.open(pathToASJPCorpusFile,"r","utf-8")):
    if i > 0:
        line = line.split("\t")
        if "PROTO" not in line[0] and "ARTIFICIAL" not in line[2]:
            words = line[10:]
            #remove invalid characters
            for word in words:
                word = word.replace("%","")
            """
            for cells with more than one corresponding word, add that word as new entry
            """
            tba = []
            for i_w,word in enumerate(words):
                if "," in word:
                    for match in  regex.findall("(?<=,).+",word):          
                        tba.append(match)
                    #reduce entry to first occurence of seperator
                    words[i_w] = word[:word.index(",")]
            words.extend(tba)
            allWords.extend(words)
   
"""
EXTRACT ALL PHONEMES AND ADD WORD BOUNDARIES AND GET RID OF EMPTY STRINGS
"""
print("EXTRACT ALL PHONEMES AND ADD WORD BOUNDARIES AND GET RID OF EMPTY STRINGS")
allWords = [["<s>"]+getListofASJPPhonemes(word)+["</s>"] for word in allWords if len(word) > 0]

"""
COUNT PHONEMES
"""
print("COUNT PHONEMES")
freq= dict()
tags = ["labialized","palazalized","aspirated","glottalized","plain"]
for tag in ["labialized","palazalized","aspirated","glottalized","plain"]:
    freq[tag] = 0
for i,word in enumerate(allWords):
    for phoneme in word:
        if "w~" in phoneme:
            freq["labialized"] += 1
        if "y~" in phoneme:
            freq["palazalized"] += 1
        if "h~" in phoneme:
            freq["aspirated"] += 1
        if "\"" in phoneme:
            freq["glottalized"] += 1
        if len(phoneme) == 1:
            freq["plain"] += 1

print(freq)
for 